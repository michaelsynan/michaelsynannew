{"generatedAt":1709934625442,"generateTime":146,"contents":[{"_path":"/blog/full-stack-javascript-blog","_dir":"blog","_draft":false,"_partial":false,"_locale":"","title":"Full Stack Musings Launch","description":"Developers should try to write code for technology that makes us better.","layout":"default","tag":["Philosophy"],"image":"full-stack.webp","category":"post","status":"unpublished","createdAt":"2023-11-15T00:00:00.000Z","head":{"meta":[{"name":"title","content":"Full Stack Musings Launch | Michael Synan"},{"name":"description","content":"Introducing the Nuxt Tailwind Starter Template that makes use of the nuxt.config extends key for base layer components. "}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":""},"children":[{"type":"element","tag":"binding","props":{"value":"$doc.title"},"children":[]}]},{"type":"element","tag":"the-date","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"During my high school and undergraduate years, I spent a lot of time reading philosophy. This journey naturally led me to consider the philosophical implications of society's growing dependence on technology, especially as companies like Google started to transform into monopolies. The emergence of open-source as a counterpoint to these tech giants seemed promising. Around 2008, I discovered "},{"type":"element","tag":"a","props":{"href":"https://ubuntu.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Ubuntu"}]},{"type":"text","value":"—a popular Linux distribution even back then—and fell in love with it. Instead of following the recommended dual-boot setup, I wiped Windows off my school laptop and dove into the world of Linux. This step was more than a mere switch in operating systems; it symbolized a deeper alignment of my technological pursuits with my philosophical interests. As I grew older, I continued to engage with both technology and philosophy, concerned primarily with how to grow as a human being in a world increasingly shaped by technology. More recently, I decided to put these thoughts into writing, hence Full Stack Musings was born."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The term 'full stack developer' typically refers to someone skilled in both "},{"type":"element","tag":"a","props":{"href":"https://www.w3schools.com/whatis/whatis_fullstack.asp","rel":["nofollow"]},"children":[{"type":"text","value":"front-end and back-end aspects of web development"}]},{"type":"text","value":", encompassing expertise in various coding languages, databases, and server management. However, in this context, 'full stack' signifies more than just programming; it represents a holistic understanding of technology's role in society, blending technical proficiency with a deeper appreciation of the philosophical and ethical dimensions of our digital world."}]},{"type":"element","tag":"h3","props":{"id":"nature-vs-technology"},"children":[{"type":"text","value":"Nature vs Technology"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The question of nature versus nurture remains a central theme in both biology and philosophy, yet a definitive conclusion continues to elude us. As technology evolves and accelerates its integration into our biology and daily experiences, this question becomes even more pressing. This urgency arises because technology, including our phones and information sources, is created by companies motivated not only to provide services but also to generate profit. We cannot take for granted that these companies will act in our best interest, nor can we assume that the implications and side-effects of our technology usage are fully understood. Therefore, the question of how we develop and grow as humans hangs in the balance."}]},{"type":"element","tag":"h4","props":{"id":"us-against-technology"},"children":[{"type":"text","value":"Us Against Technology"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's no secret that Big Tech aims to shape our behavior. Entire industries have emerged, focusing on predicting our actions and intervening at just the right moments to boost sales or capture our attention. Tech companies, along with their commercial partners, are constantly escalating their tactics, crafting increasingly potent marketing campaigns and sophisticated methods for profit extraction. In this scenario, where companies dictate our choices and beliefs, the concepts of originality and authenticity become crucial considerations."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This issue gains even more importance in the era of generative AI, which has the potential to create an endless stream of content. This development could allow companies to allocate a larger portion of their budgets to advertising and delivery, further intensifying the challenge of preserving individual originality and authenticity in an increasingly AI-driven world."}]},{"type":"element","tag":"h3","props":{"id":"authenticity-technology-and-heidegger"},"children":[{"type":"text","value":"Authenticity, Technology, and Heidegger"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Martin Heidegger, a profoundly influential yet often underrecognized thinker on technology, outlined some important questions that remain relevant today. His insights are particularly evident in his 1954 essay \"The Question Concerning Technology.\" In this essay, Heidegger made an important observation: \"The essence of technology is by no means anything technological.\" He elaborates on this idea, stating:"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Thus the challenging "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"of technology"}]},{"type":"text","value":" reveals objects in the mode of ordering. The revealing that rules throughout modern technology has the character of a setting-upon, in the sense of a challenging-forth."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this quote, Heidegger exposes the underlying logic driving technology and calls on society to engage with it on that level. This perspective directly centers the individual and places the onus on them for engaging critically with the technology they use. This can be challenging but, also Heidegger acknowledges,"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where danger is, grows the saving power also."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this quote, Heidegger is not saying that technology itself presents the danger and saving power, but, instead, our introspection of it. We can sleep walk through technology use and engage with it on tech companies terms, or do the difficult thing and elaborate our own response."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the end of the day, Heidegger calls on us to use technology in a purposeful and authentic manner, instead of the other way around."}]},{"type":"element","tag":"back","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"nature-vs-technology","depth":3,"text":"Nature vs Technology"},{"id":"authenticity-technology-and-heidegger","depth":3,"text":"Authenticity, Technology, and Heidegger"}]}},"_type":"markdown","_id":"content:blog:full-stack-javascript-blog.md","_source":"content","_file":"blog/full-stack-javascript-blog.md","_extension":"md"},{"_path":"/blog/intersection-observer-nuxt","_dir":"blog","_draft":false,"_partial":false,"_locale":"","title":"Reveal on Scroll with Nuxt and Intersection Observer API","description":"Simple reveal on scroll approach using the Intersection Observer API.","layout":"default","tag":["Intersection Observer","Nuxt","Vue"],"image":"intersection-observer.webp","category":"post","status":"published","createdAt":"2023-04-23T00:00:00.000Z","head":{"meta":[{"name":"title","content":"Reveal on Scroll with Nuxt and Intersection Observer | Michael Synan"},{"name":"description","content":"Simple reveal on scroll approach using the Intersection Observer API."}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":""},"children":[{"type":"element","tag":"binding","props":{"value":"$doc.title"},"children":[]}]},{"type":"element","tag":"the-date","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"While adding as many libraries to your project as possible may seem like fun (it's not), often the sensible choice is to utilize native browser solutions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Enter Web Browser APIs."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One of my favorite Web Browser APIs is "},{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API","rel":["nofollow"]},"children":[{"type":"text","value":"Intersection Observer"}]},{"type":"text","value":", which provides an interface for determining if an element is located inside the viewport. This handy API has been around since 2017 and has been proven to be extremely stable and performant for aiding in such tasks as lazy loading, animations and effects, and tracking user engagement."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Using browser native solutions like the Intersection Observer API helps reduce load time and decreases the number of dependencies in your project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this tutorial I'll demonstrate how to add Intersection Observer to your Nuxt 3 project in order to trigger a reveal on scroll CSS animation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Intersection Observer Illustration","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2k62v4bskvvgi1opm7q.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"how-does-it-work"},"children":[{"type":"text","value":"How Does it Work?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Intersection Observer API works by creating a new observer instance which takes a callback function and options as its arguments. The callback function is executed whenever the target element intersects with the specified threshold in the viewport, defined in the options object. By invoking the observer's observe method and passing in the target element, you can efficiently monitor and react to its visibility changes on the page."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to use Intersection Observer to animate an element on scroll you'll need to use the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onMounted()"}]},{"type":"text","value":" Vue.js hook."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To do this, simply import "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onMounted"}]},{"type":"text","value":" in the script section of your component template:"}]},{"type":"element","tag":"pre","props":{"code":"import { onMounted, ref } from 'vue';\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import { onMounted, ref } from 'vue';\n"}]}]},{"type":"element","tag":"h3","props":{"id":"intersection-observer"},"children":[{"type":"text","value":"Intersection Observer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, you must create your Observer instance inside of the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"onMounted"}]},{"type":"text","value":" lifecycle hook and write your desired logic for any elements that get passed back, like so:"}]},{"type":"element","tag":"pre","props":{"code":"onMounted(() => {\n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('animate-delay');\n        }\n      });\n    },\n    {\n      threshold: 0.5,\n    }\n  );\n\n  if (demo) {\n    observer.observe(demo);\n  }\n});\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"onMounted(() => {\n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('animate-delay');\n        }\n      });\n    },\n    {\n      threshold: 0.5,\n    }\n  );\n\n  if (demo) {\n    observer.observe(demo);\n  }\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the example above the CSS class \"animate-delay\" is appended to the class list of any element being observed.\n "}]},{"type":"element","tag":"h3","props":{"id":"css-styles"},"children":[{"type":"text","value":"CSS styles"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With your Observer in place, you can wrap up by adding the desired CSS animations:"}]},{"type":"element","tag":"pre","props":{"code":".animate-delay {\n  animation-duration: 0.5s;\n  animation-fill-mode: both;\n  animation-name: animate-delay;\n}\n\n@keyframes animate-delay {\n  0% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.demo {\n  display: inline-block;\n  opacity: 0;\n  transform: translateY(10px);\n}\n</style>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":".animate-delay {\n  animation-duration: 0.5s;\n  animation-fill-mode: both;\n  animation-name: animate-delay;\n}\n\n@keyframes animate-delay {\n  0% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.demo {\n  display: inline-block;\n  opacity: 0;\n  transform: translateY(10px);\n}\n</style>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the demo code I added a ref to my target element called \"demo\" but you can use classes, IDs and any other DOM element:"}]},{"type":"element","tag":"pre","props":{"code":"<span ref=\"demo\" class=\"demo\">\n  Intersection Observer in Action 👌\n</span>\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<span ref=\"demo\" class=\"demo\">\n  Intersection Observer in Action 👌\n</span>\n"}]}]},{"type":"element","tag":"h3","props":{"id":"troubleshooting"},"children":[{"type":"text","value":"Troubleshooting"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you have any issues you can always use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"console.log"}]},{"type":"text","value":" inside of the Observer instance to check if your Observer instance is working correctly:"}]},{"type":"element","tag":"pre","props":{"code":"console.log('Observed element:', entry.target);\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"console.log('Observed element:', entry.target);\n"}]}]},{"type":"element","tag":"h3","props":{"id":"live-demo"},"children":[{"type":"text","value":"Live Demo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you want to see it in action, you can check out the live demo on StackBlitz: "},{"type":"element","tag":"a","props":{"href":"https://stackblitz.com/edit/intersection-observer-nuxt?file=README.md","rel":["nofollow"]},"children":[{"type":"text","value":"https://stackblitz.com/edit/intersection-observer-nuxt?file=README.md"}]}]},{"type":"element","tag":"h3","props":{"id":"conclusion"},"children":[{"type":"text","value":"Conclusion"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In conclusion, using browser native solutions like the Intersection Observer API can greatly benefit the performance of your project by reducing load time and dependencies. The Intersection Observer API provides a stable and efficient solution for triggering animations and effects on scroll. By implementing this API in your Nuxt 3 project, you can easily create some nice animations and increase website performance."}]},{"type":"element","tag":"back","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"how-does-it-work","depth":3,"text":"How Does it Work?"},{"id":"intersection-observer","depth":3,"text":"Intersection Observer"},{"id":"css-styles","depth":3,"text":"CSS styles"},{"id":"troubleshooting","depth":3,"text":"Troubleshooting"},{"id":"live-demo","depth":3,"text":"Live Demo"},{"id":"conclusion","depth":3,"text":"Conclusion"}]}},"_type":"markdown","_id":"content:blog:intersection-observer-nuxt.md","_source":"content","_file":"blog/intersection-observer-nuxt.md","_extension":"md"},{"_path":"/blog/nuxt-image-carousel","_dir":"blog","_draft":false,"_partial":false,"_locale":"","title":"Nuxt Image Carousel with Swiper","description":"Build a cool image carousel with Nuxt and Swiper","layout":"default","tag":["Nuxt","Tailwind","Pinia"],"image":"nuxt3-tailwind-thumb.webp","category":"post","status":"published","createdAt":"2024-03-25T00:00:00.000Z","head":{"meta":[{"name":"title","content":"Nuxt Tailwind Starter | Michael Synan"},{"name":"description","content":"Introducing the Nuxt Tailwind Starter Template that makes use of the nuxt.config extends key for base layer components. "}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":""},"children":[{"type":"element","tag":"binding","props":{"value":"$doc.title"},"children":[]}]},{"type":"element","tag":"the-date","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Over the past year, I've found myself going through the same steps repeatedly to achieve my ideal Nuxt setup. This involved installing and configuring TailwindCSS, creating layouts, installing an icon framework, and creating base components. To make life easier, I decided to create a starter template using best practices and some of the latest Nuxt 3 features, such as adding layers via the extends key in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt.config"}]},{"type":"text","value":". Today, I'm excited to announce the release of this starter template and base layer."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're new to Nuxt, feel free to check out the write-up below. Otherwise, you can go straight to the repos here:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/michaelsynan/Nuxt-Tailwind-Template","rel":["nofollow"]},"children":[{"type":"text","value":"Nuxt Tailwind Starter Repo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"Base Layer Repo"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Nuxt 3 and TailwindCSS","className":["border-stone-700","border","rounded"],"src":"/nuxt3_tailwind5.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Visit the demo site "},{"type":"element","tag":"a","props":{"href":"https://github.com/michaelsynan/nuxt-base-layer","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The template includes a lot of useful features, including:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"TailwindCSS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pinia"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unplugin-icons"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Very exciting Base Layer"}]}]},{"type":"element","tag":"h2","props":{"id":"purpose-of-this-repo"},"children":[{"type":"text","value":"Purpose of this repo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Minimalst starter template and themable component library for Nuxt."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to helping myself develop faster, I wanted to provide a resource to the rest of the Nuxt community, particularly new developers. The starter template makes a few key tasks easy out-of-the-box, like providing an icon framework, setting up a CSS framework, and offering a state management system. Together, these features make development fast and simple."}]},{"type":"element","tag":"h2","props":{"id":"deploying-to-github-pages-and-setting-baseurl"},"children":[{"type":"text","value":"Deploying to GitHub Pages and setting baseURL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to make the baseURL work properly you must create an "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" file, which you can do with this command from the project's root directory, replacing the value with your GitHub repo name:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"echo \"BASE_URL=/Nuxt-Tailwind-Template\" > .env"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Alternately you can set baseURL manually in your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt.config.ts"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To read about one method for deploying to GitHub Pages, you can check out my "},{"type":"element","tag":"a","props":{"href":"https://gist.github.com/michaelsynan/307a267eff9b35e1b7f333da5e151e99","rel":["nofollow"]},"children":[{"type":"text","value":"gist"}]},{"type":"text","value":" on the topic."}]},{"type":"element","tag":"h2","props":{"id":"some-next-steps"},"children":[{"type":"text","value":"Some next steps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'll be working on a beginner's guide, developing many more icons for the Base Layer, and cleaning up the code. Stay tuned for updates and improvements to this starter template!"}]},{"type":"element","tag":"back","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"purpose-of-this-repo","depth":2,"text":"Purpose of this repo"},{"id":"deploying-to-github-pages-and-setting-baseurl","depth":2,"text":"Deploying to GitHub Pages and setting baseURL"},{"id":"some-next-steps","depth":2,"text":"Some next steps"}]}},"_type":"markdown","_id":"content:blog:nuxt-image-carousel.md","_source":"content","_file":"blog/nuxt-image-carousel.md","_extension":"md"},{"_path":"/blog/nuxt-tailwind-starter","_dir":"blog","_draft":false,"_partial":false,"_locale":"","title":"Nuxt Tailwind Starter with Base Layer Release","description":"Introducing the Nuxt Tailwind Starter Template that makes use of the nuxt.config extends key for base layer components.","layout":"default","tag":["Nuxt","Tailwind","Pinia"],"image":"nuxt3-tailwind-thumb.webp","category":"post","status":"published","createdAt":"2023-03-23T00:00:00.000Z","head":{"meta":[{"name":"title","content":"Nuxt Tailwind Starter | Michael Synan"},{"name":"description","content":"Introducing the Nuxt Tailwind Starter Template that makes use of the nuxt.config extends key for base layer components. "}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":""},"children":[{"type":"element","tag":"binding","props":{"value":"$doc.title"},"children":[]}]},{"type":"element","tag":"the-date","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Over the past year, I've found myself going through the same steps repeatedly to achieve my ideal Nuxt setup. This involved installing and configuring TailwindCSS, creating layouts, installing an icon framework, and creating base components. To make life easier, I decided to create a starter template using best practices and some of the latest Nuxt 3 features, such as adding layers via the extends key in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt.config"}]},{"type":"text","value":". Today, I'm excited to announce the release of this starter template and base layer."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're new to Nuxt, feel free to check out the write-up below. Otherwise, you can go straight to the repos here:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/michaelsynan/Nuxt-Tailwind-Template","rel":["nofollow"]},"children":[{"type":"text","value":"Nuxt Tailwind Starter Repo"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":""},"children":[{"type":"text","value":"Base Layer Repo"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Nuxt 3 and TailwindCSS","className":["border-stone-700","border","rounded"],"src":"/nuxt3_tailwind5.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Visit the demo site "},{"type":"element","tag":"a","props":{"href":"https://github.com/michaelsynan/nuxt-base-layer","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The template includes a lot of useful features, including:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"TailwindCSS"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pinia"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unplugin-icons"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Very exciting Base Layer"}]}]},{"type":"element","tag":"h2","props":{"id":"purpose-of-this-repo"},"children":[{"type":"text","value":"Purpose of this repo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Minimalst starter template and themable component library for Nuxt."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to helping myself develop faster, I wanted to provide a resource to the rest of the Nuxt community, particularly new developers. The starter template makes a few key tasks easy out-of-the-box, like providing an icon framework, setting up a CSS framework, and offering a state management system. Together, these features make development fast and simple."}]},{"type":"element","tag":"h2","props":{"id":"deploying-to-github-pages-and-setting-baseurl"},"children":[{"type":"text","value":"Deploying to GitHub Pages and setting baseURL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to make the baseURL work properly you must create an "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" file, which you can do with this command from the project's root directory, replacing the value with your GitHub repo name:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"echo \"BASE_URL=/Nuxt-Tailwind-Template\" > .env"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Alternately you can set baseURL manually in your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt.config.ts"}]},{"type":"text","value":" file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To read about one method for deploying to GitHub Pages, you can check out my "},{"type":"element","tag":"a","props":{"href":"https://gist.github.com/michaelsynan/307a267eff9b35e1b7f333da5e151e99","rel":["nofollow"]},"children":[{"type":"text","value":"gist"}]},{"type":"text","value":" on the topic."}]},{"type":"element","tag":"h2","props":{"id":"some-next-steps"},"children":[{"type":"text","value":"Some next steps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'll be working on a beginner's guide, developing many more icons for the Base Layer, and cleaning up the code. Stay tuned for updates and improvements to this starter template!"}]},{"type":"element","tag":"back","props":{},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"purpose-of-this-repo","depth":2,"text":"Purpose of this repo"},{"id":"deploying-to-github-pages-and-setting-baseurl","depth":2,"text":"Deploying to GitHub Pages and setting baseURL"},{"id":"some-next-steps","depth":2,"text":"Some next steps"}]}},"_type":"markdown","_id":"content:blog:nuxt-tailwind-starter.md","_source":"content","_file":"blog/nuxt-tailwind-starter.md","_extension":"md"}],"navigation":[{"title":"Blog","_path":"/blog","children":[{"title":"Full Stack Musings Launch","_path":"/blog/full-stack-javascript-blog","layout":"default"},{"title":"Reveal on Scroll with Nuxt and Intersection Observer API","_path":"/blog/intersection-observer-nuxt","layout":"default"},{"title":"Nuxt Image Carousel with Swiper","_path":"/blog/nuxt-image-carousel","layout":"default"},{"title":"Nuxt Tailwind Starter with Base Layer Release","_path":"/blog/nuxt-tailwind-starter","layout":"default"}]}]}